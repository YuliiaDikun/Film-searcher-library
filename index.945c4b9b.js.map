{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,8EAQMC,G,aAAOC,SAASC,cAAc,WAC9BC,EAAiBF,SAASC,cAAc,kBACxCE,EAAgB,cAChBC,EAAc,YACdC,EAAU,kBAEhBN,EAAKO,iBAAiB,S,SAEUC,G,OAAjBC,EAAgBC,MAAAC,KAAAC,U,IAD/B,IAAMC,EAAc,IAAI,EAAAC,EAAAC,S,SACTN,I,OAAAA,EAAfO,EAAAlB,EAAA,CAAAkB,EAAAC,GAAAC,MAAA,SAAAC,EAAgCX,G,IAKtBY,EACAC,EAEAC,EACFC,EAKIC,EAGAC,EACFC,EACKC,EAOLC,EACKC,EAOHC,EACAC,EAGAC,EAIFC,EACAC,EAOKC,EAQAC,EAGAC,EAOAC,EAKAC,E,qEAtDTZ,EAAA,SAAqBa,GACnB,OAAOA,EACJC,KAAI,SAAAC,GACH,OAAOA,C,IAERC,MAAK,SAAAD,G,OAAMA,EAAGE,KAAKC,SAAS,YAAcH,EAAGE,I,KAGlDf,EAAA,SAAsBiB,GACpB,GAAKA,EAGH,MAAO,iCAA4CC,OAAXD,EAAOE,KAF/ChC,EAAAiC,GAASC,OAAOC,QAAQ,gC,EAqB5BhB,EAAA,WACOJ,EAAUqB,QACbnB,EAAcoB,UAAW,EACzBpB,EAAcqB,UAAUC,IAAI,W,EAKhCnB,EAAA,WACEF,EAAUoB,UAAUE,OAAO,mB,EAE7BnB,EAAA,WACElC,EAAesD,UAAY,GAC3BtD,EAAemD,UAAUC,IAAI,aAC7BtD,SAASyD,oBAAoB,UAAWpB,GACxCnC,EAAeuD,oBAAoB,QAASnB,GAC5CN,EAAcyB,oBAAoB,QAAStB,E,EAE7CE,EAAA,SAAiBqB,GACI,WAAfA,EAAMC,MACRvB,G,EAGJE,EAAA,SAA0BoB,GAEI,SAA1BA,EAAME,OAAOC,UACa,QAA1BH,EAAME,OAAOC,UAEbzB,IAEEsB,EAAME,SAAWF,EAAMI,eACzB1B,IAEgC,YAA9BsB,EAAME,OAAOG,QAAQpB,OACvB,EAAAqB,EAAAlD,SAAsBX,EAAeiB,EAAIU,GAET,UAA9B4B,EAAME,OAAOG,QAAQpB,OACvB,EAAAqB,EAAAlD,SAAsBV,EAAagB,EAAIU,E,WArFjB,OAAxBvB,EAAIqD,OAAOC,SAAiB,C,yDAG1B1C,EAAOZ,EAAIqD,OAAOK,QAAQ,MAC1B7C,EAAKD,EAAK4C,QAAQ3C,GACxBR,EAAYsD,OAAS9C,E,UACFR,EAAYuD,c,WAAzB9C,EAAI+C,EAAAC,KACN/C,EAASD,EAAKC,OAEU,QAAxBf,EAAIqD,OAAOC,UAA8C,SAAxBtD,EAAIqD,OAAOC,SAAmB,C,gBACnDtD,EAAIqD,OAAOK,QAAQ,OACzBZ,UAAUE,OAAO,UACnBhC,EAAQD,EAAO,IACrB,EAAA0C,EAAAM,2BAA0BjE,EAASkB,EAAOH,G,yCAEtBR,EAAY2D,iB,QAA1B/C,EAAK4C,EAAAC,KACP5C,EAAMD,EAAMgD,QAQZ7C,EAAoBD,EAAYD,GAQ9BI,EAAYD,EAAaD,IACzBG,GAAY,EAAA2C,EAAA3D,SAAUO,IAClB8B,MAAQtB,EAEZE,GAAa,EAAA2C,EAAA5D,SAASgB,GAE5B5B,EAAesD,UAAYzB,EAEvBC,EAAgBhC,SAASC,cAAc,gBACvCgC,EAAYjC,SAASC,cAAc,WAEvCC,EAAemD,UAAUsB,OAAO,aAChCzE,EAAeI,iBAAiB,QAASgC,GACzCtC,SAASM,iBAAiB,UAAW+B,GACrCL,EAAc1B,iBAAiB,QAAS6B,GASxCD,I,0DAmCFnB,EAAAiC,GAASC,OAAOC,QAAQ,+B,2DA5FGzC,MAAAC,KAAAC,U","sources":["src/js/modal-open.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport FilmApi from './movieAPI';\nimport filmCard from '../templates/modal-film.hbs';\nimport fixObject from './fixObject';\n\nimport setFilmToLocalStorage from './setFilmToLocalStorage';\nimport { setFavFilmsToLocalStorage } from './setFilmToLocalStorage';\n\nconst ulEl = document.querySelector('.films');\nconst modalContainer = document.querySelector('#js-film-modal');\nconst LOCAL_WATCHED = 'watchedList';\nconst LOCAL_QUEUE = 'queueList';\nconst FAV_KEY = 'favouriteMovies';\n\nulEl.addEventListener('click', onFimlsListClick);\nconst filmAPIByID = new FilmApi();\nasync function onFimlsListClick(evt) {\n  try {\n    if (evt.target.nodeName === 'UL') {\n      return;\n    }\n    const item = evt.target.closest('li');\n    const id = item.dataset.id;\n    filmAPIByID.idFilm = id;\n    const film = await filmAPIByID.getFilmByID();\n    let genres = film.genres;\n\n    if (evt.target.nodeName === 'svg' || evt.target.nodeName === 'path') {\n      let favIcon = evt.target.closest('svg');\n      favIcon.classList.toggle('active');\n      const genre = genres[0];\n      setFavFilmsToLocalStorage(FAV_KEY, genre, id);\n    } else {\n      const video = await filmAPIByID.getTrailerById();\n      let arr = video.results;\n      function findTrailer(arr) {\n        return arr\n          .map(el => {\n            return el;\n          })\n          .find(el => el.name.includes('Trailer') || el.name);\n      }\n      let objectWithTrailer = findTrailer(arr);\n      function trailerCheck(object) {\n        if (!object) {\n          Notiflix.Notify.failure('Oops! Trailer did not find...');\n        } else {\n          return `https://www.youtube.com/embed/${object.key}`;\n        }\n      }\n      const movieLink = trailerCheck(objectWithTrailer);\n      const fixedFilm = fixObject(film);\n      fixedFilm.movie = movieLink;\n\n      const filmMarkUp = filmCard(fixedFilm);\n\n      modalContainer.innerHTML = filmMarkUp;\n\n      let trailerBtnRef = document.querySelector('.trailerShow');\n      let iframeRef = document.querySelector('.hidden');\n\n      modalContainer.classList.remove('is-hidden');\n      modalContainer.addEventListener('click', onModalFilmClick);\n      document.addEventListener('keydown', onClose);\n      trailerBtnRef.addEventListener('click', toggleIframe);\n\n      function disabledtrailerBtn() {\n        if (!fixedFilm.movie) {\n          trailerBtnRef.disabled = true;\n          trailerBtnRef.classList.add('noHover');\n        }\n      }\n\n      disabledtrailerBtn();\n      function toggleIframe() {\n        iframeRef.classList.toggle('trailer__youtube');\n      }\n      function closeModal() {\n        modalContainer.innerHTML = '';\n        modalContainer.classList.add('is-hidden');\n        document.removeEventListener('keydown', onClose);\n        modalContainer.removeEventListener('click', onModalFilmClick);\n        trailerBtnRef.removeEventListener('click', toggleIframe);\n      }\n      function onClose(event) {\n        if (event.code === 'Escape') {\n          closeModal();\n        }\n      }\n      function onModalFilmClick(event) {\n        if (\n          event.target.nodeName === 'path' ||\n          event.target.nodeName === 'svg'\n        ) {\n          closeModal();\n        }\n        if (event.target === event.currentTarget) {\n          closeModal();\n        }\n        if (event.target.dataset.name === 'watched') {\n          setFilmToLocalStorage(LOCAL_WATCHED, id, fixedFilm);\n        }\n        if (event.target.dataset.name === 'queue') {\n          setFilmToLocalStorage(LOCAL_QUEUE, id, fixedFilm);\n        }\n      }\n    }\n  } catch (error) {\n    Notiflix.Notify.failure('Oops! Something gets wrong!');\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$11a1cf5bd10bfbe0$var$ulEl","document","querySelector","$11a1cf5bd10bfbe0$var$modalContainer","$11a1cf5bd10bfbe0$var$LOCAL_WATCHED","$11a1cf5bd10bfbe0$var$LOCAL_QUEUE","$11a1cf5bd10bfbe0$var$FAV_KEY","addEventListener","evt","$11a1cf5bd10bfbe0$var$_onFimlsListClick","apply","this","arguments","$11a1cf5bd10bfbe0$var$filmAPIByID","$lHIzZ","default","$parcel$interopDefault","$2TvXO","mark","_callee","item","id","film","genres","genre","video","arr1","findTrailer","objectWithTrailer","trailerCheck","movieLink","fixedFilm","filmMarkUp","trailerBtnRef","iframeRef","disabledtrailerBtn","toggleIframe","closeModal","onClose","onModalFilmClick","arr","map","el","find","name","includes","object","concat","key","$iU1Pc","Notify","failure","movie","disabled","classList","add","toggle","innerHTML","removeEventListener","event","code","target","nodeName","currentTarget","dataset","$bGg9a","closest","idFilm","getFilmByID","_ctx","sent","setFavFilmsToLocalStorage","getTrailerById","results","$pWSgs","$2eIIo","remove"],"version":3,"file":"index.945c4b9b.js.map"}