{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,8EAOMC,EAAOC,SAASC,cAAc,UAC9BC,EAAiBF,SAASC,cAAc,kBACxCE,EAAgB,cAChBC,EAAc,YAEpBL,EAAKM,iBAAiB,S,SAIUC,G,OAAjBC,EAAgBC,MAAAC,KAAAC,U,IAF/B,IAAMC,EAAc,IAAI,EAAAC,EAAAC,S,SAETN,I,OAAAA,EAAfO,EAAAjB,EAAA,CAAAiB,EAAAC,GAAAC,MAAA,SAAAC,EAAgCX,G,IAKtBY,EAEFC,EAGEC,EAEAC,EACFC,EACKC,EAOLC,EACEC,EAEAC,EAGAC,EAIFC,EACAC,EAOKC,EAGAC,EAOAC,EAKAC,E,qEAxCTV,EAAA,SAAqBW,GACnB,OAAOA,EACJC,KAAI,SAAAC,GACH,OAAOA,C,IAERC,MAAK,SAAAD,G,MAAkB,qBAAZA,EAAGE,I,KAoBnBR,EAAA,WACED,EAAUU,UAAUC,OAAO,mB,EAE7BT,EAAA,WACE7B,EAAeuC,UAAY,GAC3BvC,EAAeqC,UAAUG,IAAI,aAC7B1C,SAAS2C,oBAAoB,UAAWX,GACxC9B,EAAeyC,oBAAoB,QAASV,GAC5CL,EAAce,oBAAoB,QAASb,E,EAE7CE,EAAA,SAAiBY,GACI,WAAfA,EAAMC,MACRd,G,EAGJE,EAAA,SAA0BW,GACM,SAA1BA,EAAME,OAAOC,UAAiD,QAA1BH,EAAME,OAAOC,UACnDhB,IAEEa,EAAME,SAAWF,EAAMI,eACzBjB,IAGgC,YAA9Ba,EAAME,OAAOG,QAAQX,OACvB,EAAAY,EAAArC,SAAsBV,EAAegB,EAAIO,GAET,UAA9BkB,EAAME,OAAOG,QAAQX,OACvB,EAAAY,EAAArC,SAAsBT,EAAae,EAAIO,E,WAhEf,OAAxBpB,EAAIwC,OAAOC,SAAiB,C,uDAG1B7B,EAAOZ,EAAIwC,OAAOK,QAAQ,MAE5BhC,EAAKD,EAAK+B,QAAQ9B,GAEtBR,EAAYyC,OAASjC,E,UACFR,EAAY0C,c,eAAzBjC,EAAIkC,EAAAC,K,UAEU5C,EAAY6C,iB,QAA1BnC,EAAKiC,EAAAC,KACPjC,EAAMD,EAAMoC,QAQZjC,EAAoBD,EAAYD,GAC9BG,EAAY,iCAAuDiC,OAAtBlC,EAAkBmC,MAE/DjC,GAAY,EAAAkC,EAAA/C,SAAUO,IAClByC,MAAQpC,EAEZE,GAAa,EAAAmC,EAAAjD,SAASa,GAE5BxB,EAAeuC,UAAYd,EAEvBC,EAAgB5B,SAASC,cAAc,gBACvC4B,EAAY7B,SAASC,cAAc,WAEvCC,EAAeqC,UAAUwB,OAAO,aAChC7D,EAAeG,iBAAiB,QAAS4B,GACzCjC,SAASK,iBAAiB,UAAW2B,GACrCJ,EAAcvB,iBAAiB,QAASyB,G,kDAiCxChB,EAAAkD,GAASC,OAAOC,QAAQZ,EAAAa,GAAMC,S,2DAtEH5D,MAAAC,KAAAC,U","sources":["src/js/modal-open.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport FilmApi from './movieAPI';\nimport filmCard from '../templates/modal-film.hbs';\nimport fixObject from './fixObject';\n\nimport setFilmToLocalStorage from './setFilmToLocalStorage';\n\nconst ulEl = document.querySelector('.films');\nconst modalContainer = document.querySelector('#js-film-modal');\nconst LOCAL_WATCHED = 'watchedList';\nconst LOCAL_QUEUE = 'queueList';\n\nulEl.addEventListener('click', onFimlsListClick);\n\nconst filmAPIByID = new FilmApi();\n\nasync function onFimlsListClick(evt) {\n  try {\n    if (evt.target.nodeName === 'UL') {\n      return;\n    }\n    const item = evt.target.closest('li');\n\n    let id = item.dataset.id;\n\n    filmAPIByID.idFilm = id;\n    const film = await filmAPIByID.getFilmByID();\n    // =============================================================\n    const video = await filmAPIByID.getTrailerById();\n    let arr = video.results;\n    function findTrailer(arr) {\n      return arr\n        .map(el => {\n          return el;\n        })\n        .find(el => el.name === 'Official Trailer');\n    }\n    let objectWithTrailer = findTrailer(arr);\n    const movieLink = `https://www.youtube.com/embed/${objectWithTrailer.key}`;\n\n    const fixedFilm = fixObject(film);\n    fixedFilm.movie = movieLink;\n\n    const filmMarkUp = filmCard(fixedFilm);\n\n    modalContainer.innerHTML = filmMarkUp;\n\n    let trailerBtnRef = document.querySelector('.trailerShow');\n    let iframeRef = document.querySelector('.hidden');\n\n    modalContainer.classList.remove('is-hidden');\n    modalContainer.addEventListener('click', onModalFilmClick);\n    document.addEventListener('keydown', onClose);\n    trailerBtnRef.addEventListener('click', toggleIframe);\n\n    function toggleIframe() {\n      iframeRef.classList.toggle('trailer__youtube');\n    }\n    function closeModal() {\n      modalContainer.innerHTML = '';\n      modalContainer.classList.add('is-hidden');\n      document.removeEventListener('keydown', onClose);\n      modalContainer.removeEventListener('click', onModalFilmClick);\n      trailerBtnRef.removeEventListener('click', toggleIframe);\n    }\n    function onClose(event) {\n      if (event.code === 'Escape') {\n        closeModal();\n      }\n    }\n    function onModalFilmClick(event) {\n      if (event.target.nodeName === 'path' || event.target.nodeName === 'svg') {\n        closeModal();\n      }\n      if (event.target === event.currentTarget) {\n        closeModal();\n      }\n\n      if (event.target.dataset.name === 'watched') {\n        setFilmToLocalStorage(LOCAL_WATCHED, id, fixedFilm);\n      }\n      if (event.target.dataset.name === 'queue') {\n        setFilmToLocalStorage(LOCAL_QUEUE, id, fixedFilm);\n      }\n    }\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$11a1cf5bd10bfbe0$var$ulEl","document","querySelector","$11a1cf5bd10bfbe0$var$modalContainer","$11a1cf5bd10bfbe0$var$LOCAL_WATCHED","$11a1cf5bd10bfbe0$var$LOCAL_QUEUE","addEventListener","evt","$11a1cf5bd10bfbe0$var$_onFimlsListClick","apply","this","arguments","$11a1cf5bd10bfbe0$var$filmAPIByID","$lHIzZ","default","$parcel$interopDefault","$2TvXO","mark","_callee","item","id","film","video","arr1","findTrailer","objectWithTrailer","movieLink","fixedFilm","filmMarkUp","trailerBtnRef","iframeRef","toggleIframe","closeModal","onClose","onModalFilmClick","arr","map","el","find","name","classList","toggle","innerHTML","add","removeEventListener","event","code","target","nodeName","currentTarget","dataset","$bGg9a","closest","idFilm","getFilmByID","_ctx","sent","getTrailerById","results","concat","key","$pWSgs","movie","$2eIIo","remove","$iU1Pc","Notify","failure","t0","message"],"version":3,"file":"index.1e25dc6b.js.map"}