{"mappings":"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","sources":["src/js/modal-open.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport FilmApi from './movieAPI';\nimport filmCard from '../templates/modal-film.hbs';\nimport fixObject from './fixObject';\nimport { setLocalStorage, getLocalStorage } from './localStorage';\n\nimport setFilmToLocalStorage from './setFilmToLocalStorage';\n\nconst ulEl = document.querySelector('.films');\n\nconst modalContainer = document.querySelector('#js-film-modal');\nconst LOCAL_WATCHED = 'watchedList';\nconst LOCAL_QUEUE = 'queueList';\nconst FAV_KEY = 'favouriteMovies';\n\nlet favObj = getLocalStorage(FAV_KEY);\n\nulEl.addEventListener('click', onFimlsListClick);\n\nconst filmAPIByID = new FilmApi();\n\nasync function onFimlsListClick(evt) {\n  try {\n    if (evt.target.nodeName === 'UL') {\n      return;\n    }\n    const item = evt.target.closest('li');\n    const id = item.dataset.id;\n    filmAPIByID.idFilm = id;\n    const film = await filmAPIByID.getFilmByID();\n\n    let genres = film.genres;\n\n    if (evt.target.nodeName === 'svg' || evt.target.nodeName === 'path') {\n      let favIcon = evt.target.closest('svg');\n      favIcon.classList.toggle('active');\n      let favId = Object.keys(favObj);\n      if (favIcon.classList.contains('active') && !favId.includes(id)) {\n        genres.forEach(genre => (favObj[id] = genre));\n        setLocalStorage(FAV_KEY, favObj);\n      }\n    } else {\n      const video = await filmAPIByID.getTrailerById();\n\n      let arr = video.results;\n\n      function findTrailer(arr) {\n        return arr\n          .map(el => {\n            return el;\n          })\n          .find(el => el.name.includes('Trailer') || el.name);\n      }\n      let objectWithTrailer = findTrailer(arr);\n\n      function trailerCheck(object) {\n        if (!object) {\n          Notiflix.Notify.failure('Oops! Trailer did not find...');\n        } else {\n          return `https://www.youtube.com/embed/${object.key}`;\n        }\n      }\n      const movieLink = trailerCheck(objectWithTrailer);\n\n      const fixedFilm = fixObject(film);\n\n      fixedFilm.movie = movieLink;\n\n      const filmMarkUp = filmCard(fixedFilm);\n\n      modalContainer.innerHTML = filmMarkUp;\n\n      let trailerBtnRef = document.querySelector('.trailerShow');\n      let iframeRef = document.querySelector('.hidden');\n\n      modalContainer.classList.remove('is-hidden');\n      modalContainer.addEventListener('click', onModalFilmClick);\n      document.addEventListener('keydown', onClose);\n      trailerBtnRef.addEventListener('click', toggleIframe);\n\n      function toggleIframe() {\n        if (!fixedFilm.movie) {\n          Notiflix.Notify.failure('Trailer did not find');\n        }\n        iframeRef.classList.toggle('trailer__youtube');\n      }\n      function closeModal() {\n        modalContainer.innerHTML = '';\n        modalContainer.classList.add('is-hidden');\n        document.removeEventListener('keydown', onClose);\n        modalContainer.removeEventListener('click', onModalFilmClick);\n        trailerBtnRef.removeEventListener('click', toggleIframe);\n      }\n      function onClose(event) {\n        if (event.code === 'Escape') {\n          closeModal();\n        }\n      }\n      function onModalFilmClick(event) {\n        if (\n          event.target.nodeName === 'path' ||\n          event.target.nodeName === 'svg'\n        ) {\n          closeModal();\n        }\n        if (event.target === event.currentTarget) {\n          closeModal();\n        }\n\n        if (event.target.dataset.name === 'watched') {\n          setFilmToLocalStorage(LOCAL_WATCHED, id, fixedFilm);\n        }\n        if (event.target.dataset.name === 'queue') {\n          setFilmToLocalStorage(LOCAL_QUEUE, id, fixedFilm);\n        }\n      }\n    }\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$11a1cf5bd10bfbe0$var$ulEl","document","querySelector","$11a1cf5bd10bfbe0$var$modalContainer","$11a1cf5bd10bfbe0$var$LOCAL_WATCHED","$11a1cf5bd10bfbe0$var$LOCAL_QUEUE","$11a1cf5bd10bfbe0$var$FAV_KEY","$11a1cf5bd10bfbe0$var$favObj","$UL92Z","getLocalStorage","addEventListener","evt","$11a1cf5bd10bfbe0$var$_onFimlsListClick","apply","this","arguments","$11a1cf5bd10bfbe0$var$filmAPIByID","$lHIzZ","default","$parcel$interopDefault","$2TvXO","mark","_callee","item","id","film","genres","favIcon","favId","video","arr1","findTrailer","objectWithTrailer","trailerCheck","movieLink","fixedFilm","filmMarkUp","trailerBtnRef","iframeRef","toggleIframe","closeModal","onClose","onModalFilmClick","arr","map","el","find","name","includes","object","concat","key","$iU1Pc","Notify","failure","movie","classList","toggle","innerHTML","add","removeEventListener","event","code","target","nodeName","currentTarget","dataset","$bGg9a","closest","idFilm","getFilmByID","_ctx","sent","Object","keys","contains","forEach","genre","setLocalStorage","getTrailerById","results","$pWSgs","$2eIIo","remove","t0","message"],"version":3,"file":"index.8a1424c3.js.map"}