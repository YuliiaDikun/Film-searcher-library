{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,8EAOMC,EAAOC,SAASC,cAAc,UAC9BC,EAAiBF,SAASC,cAAc,kBACxCE,EAAgB,cAChBC,EAAc,YAEpBL,EAAKM,iBAAiB,S,SAIUC,G,OAAjBC,EAAgBC,MAAAC,KAAAC,U,IAF/B,IAAMC,EAAc,IAAI,EAAAC,EAAAC,S,SAETN,I,OAAAA,EAAfO,EAAAjB,EAAA,CAAAiB,EAAAC,GAAAC,MAAA,SAAAC,EAAgCX,G,IAKtBY,EAEAC,EAIAC,EAGAC,EACFC,EACKC,EAOLC,EACEC,EAEAC,EAGAC,EAIFC,EACAC,EAOKC,EAGAC,EAOAC,EAKAC,E,qEAxCTV,EAAA,SAAqBW,GACnB,OAAOA,EACJC,KAAI,SAAAC,GACH,OAAOA,C,IAERC,MAAK,SAAAD,G,OAAMA,EAAGE,KAAKC,SAAS,mB,KAoBjCT,EAAA,WACED,EAAUW,UAAUC,OAAO,mB,EAE7BV,EAAA,WACE7B,EAAewC,UAAY,GAC3BxC,EAAesC,UAAUG,IAAI,aAC7B3C,SAAS4C,oBAAoB,UAAWZ,GACxC9B,EAAe0C,oBAAoB,QAASX,GAC5CL,EAAcgB,oBAAoB,QAASd,E,EAE7CE,EAAA,SAAiBa,GACI,WAAfA,EAAMC,MACRf,G,EAGJE,EAAA,SAA0BY,GACM,SAA1BA,EAAME,OAAOC,UAAiD,QAA1BH,EAAME,OAAOC,UACnDjB,IAEEc,EAAME,SAAWF,EAAMI,eACzBlB,IAGgC,YAA9Bc,EAAME,OAAOG,QAAQZ,OACvB,EAAAa,EAAAtC,SAAsBV,EAAegB,EAAIO,GAET,UAA9BmB,EAAME,OAAOG,QAAQZ,OACvB,EAAAa,EAAAtC,SAAsBT,EAAae,EAAIO,E,WAlEf,OAAxBpB,EAAIyC,OAAOC,SAAiB,C,uDAG1B9B,EAAOZ,EAAIyC,OAAOK,QAAQ,MAE1BjC,EAAKD,EAAKgC,QAAQ/B,GAExBR,EAAY0C,OAASlC,E,UAEFR,EAAY2C,c,eAAzBlC,EAAImC,EAAAC,K,UAGU7C,EAAY8C,iB,QAA1BpC,EAAKkC,EAAAC,KACPlC,EAAMD,EAAMqC,QAQZlC,EAAoBD,EAAYD,GAC9BG,EAAY,iCAAuDkC,OAAtBnC,EAAkBoC,MAE/DlC,GAAY,EAAAmC,EAAAhD,SAAUO,IAClB0C,MAAQrC,EAEZE,GAAa,EAAAoC,EAAAlD,SAASa,GAE5BxB,EAAewC,UAAYf,EAEvBC,EAAgB5B,SAASC,cAAc,gBACvC4B,EAAY7B,SAASC,cAAc,WAEvCC,EAAesC,UAAUwB,OAAO,aAChC9D,EAAeG,iBAAiB,QAAS4B,GACzCjC,SAASK,iBAAiB,UAAW2B,GACrCJ,EAAcvB,iBAAiB,QAASyB,G,kDAiCxChB,EAAAmD,GAASC,OAAOC,QAAQZ,EAAAa,GAAMC,S,2DAxEH7D,MAAAC,KAAAC,U","sources":["src/js/modal-open.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport FilmApi from './movieAPI';\nimport filmCard from '../templates/modal-film.hbs';\nimport fixObject from './fixObject';\n\nimport setFilmToLocalStorage from './setFilmToLocalStorage';\n\nconst ulEl = document.querySelector('.films');\nconst modalContainer = document.querySelector('#js-film-modal');\nconst LOCAL_WATCHED = 'watchedList';\nconst LOCAL_QUEUE = 'queueList';\n\nulEl.addEventListener('click', onFimlsListClick);\n\nconst filmAPIByID = new FilmApi();\n\nasync function onFimlsListClick(evt) {\n  try {\n    if (evt.target.nodeName === 'UL') {\n      return;\n    }\n    const item = evt.target.closest('li');\n\n    const id = item.dataset.id;\n\n    filmAPIByID.idFilm = id;\n\n    const film = await filmAPIByID.getFilmByID();\n\n    // =============================================================\n    const video = await filmAPIByID.getTrailerById();\n    let arr = video.results;\n    function findTrailer(arr) {\n      return arr\n        .map(el => {\n          return el;\n        })\n        .find(el => el.name.includes('Official Trailer'));\n    }\n    let objectWithTrailer = findTrailer(arr);\n    const movieLink = `https://www.youtube.com/embed/${objectWithTrailer.key}`;\n\n    const fixedFilm = fixObject(film);\n    fixedFilm.movie = movieLink;\n\n    const filmMarkUp = filmCard(fixedFilm);\n\n    modalContainer.innerHTML = filmMarkUp;\n\n    let trailerBtnRef = document.querySelector('.trailerShow');\n    let iframeRef = document.querySelector('.hidden');\n\n    modalContainer.classList.remove('is-hidden');\n    modalContainer.addEventListener('click', onModalFilmClick);\n    document.addEventListener('keydown', onClose);\n    trailerBtnRef.addEventListener('click', toggleIframe);\n\n    function toggleIframe() {\n      iframeRef.classList.toggle('trailer__youtube');\n    }\n    function closeModal() {\n      modalContainer.innerHTML = '';\n      modalContainer.classList.add('is-hidden');\n      document.removeEventListener('keydown', onClose);\n      modalContainer.removeEventListener('click', onModalFilmClick);\n      trailerBtnRef.removeEventListener('click', toggleIframe);\n    }\n    function onClose(event) {\n      if (event.code === 'Escape') {\n        closeModal();\n      }\n    }\n    function onModalFilmClick(event) {\n      if (event.target.nodeName === 'path' || event.target.nodeName === 'svg') {\n        closeModal();\n      }\n      if (event.target === event.currentTarget) {\n        closeModal();\n      }\n\n      if (event.target.dataset.name === 'watched') {\n        setFilmToLocalStorage(LOCAL_WATCHED, id, fixedFilm);\n      }\n      if (event.target.dataset.name === 'queue') {\n        setFilmToLocalStorage(LOCAL_QUEUE, id, fixedFilm);\n      }\n    }\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$11a1cf5bd10bfbe0$var$ulEl","document","querySelector","$11a1cf5bd10bfbe0$var$modalContainer","$11a1cf5bd10bfbe0$var$LOCAL_WATCHED","$11a1cf5bd10bfbe0$var$LOCAL_QUEUE","addEventListener","evt","$11a1cf5bd10bfbe0$var$_onFimlsListClick","apply","this","arguments","$11a1cf5bd10bfbe0$var$filmAPIByID","$lHIzZ","default","$parcel$interopDefault","$2TvXO","mark","_callee","item","id","film","video","arr1","findTrailer","objectWithTrailer","movieLink","fixedFilm","filmMarkUp","trailerBtnRef","iframeRef","toggleIframe","closeModal","onClose","onModalFilmClick","arr","map","el","find","name","includes","classList","toggle","innerHTML","add","removeEventListener","event","code","target","nodeName","currentTarget","dataset","$bGg9a","closest","idFilm","getFilmByID","_ctx","sent","getTrailerById","results","concat","key","$pWSgs","movie","$2eIIo","remove","$iU1Pc","Notify","failure","t0","message"],"version":3,"file":"index.8c24626d.js.map"}