{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,iEAMA,MAAMC,EAAOC,SAASC,cAAc,UAC9BC,EAAiBF,SAASC,cAAc,kBAI9C,IAAIE,GAAS,EAAAC,EAAAC,iBADG,mBAEhBN,EAAKO,iBAAiB,SAEtBC,eAAgCC,GAC9B,IACE,GAA4B,OAAxBA,EAAIC,OAAOC,SACb,OAEF,MACMC,EADOH,EAAIC,OAAOG,QAAQ,MAChBC,QAAQF,GACxBG,EAAYC,OAASJ,EACrB,MAAMK,QAAaF,EAAYG,cAC/B,IAAIC,EAASF,EAAKE,OAClB,GAA4B,QAAxBV,EAAIC,OAAOC,UAA8C,SAAxBF,EAAIC,OAAOC,SAAqB,CACnE,IAAIS,EAAUX,EAAIC,OAAOG,QAAQ,OACjCO,EAAQC,UAAUC,OAAO,UACzB,IAAIC,EAAQC,OAAOC,KAAKrB,GACpBgB,EAAQC,UAAUK,SAAS,YAAcH,EAAMI,SAASf,KAC1DO,EAAOS,SAAQC,GAAUzB,EAAOQ,GAAMiB,KACtC,EAAAxB,EAAAyB,iBApBQ,kBAoBiB1B,G,KAEtB,CAEL,IAAI2B,SADgBhB,EAAYiB,kBAChBC,QAgBhB,MAAMC,EAPN,SAAsBC,GACpB,GAAKA,EAGH,MAAO,iCAAiCA,EAAOC,MAF/CC,EAAAvC,GAASwC,OAAOC,QAAQ,gC,CAKVC,CARkBT,EAL/BU,KAAIC,GACIA,IAERC,MAAKD,GAAMA,EAAGE,KAAKjB,SAAS,YAAce,EAAGE,QAW5CC,GAAY,EAAAC,EAAAC,SAAU9B,GAC5B4B,EAAUG,MAAQd,EAElB,MAAMe,GAAa,EAAAC,EAAAH,SAASF,GAE5B1C,EAAegD,UAAYF,EAE3B,IAAIG,EAAgBnD,SAASC,cAAc,gBACvCmD,EAAYpD,SAASC,cAAc,WAOvC,SAASoD,IACFT,EAAUG,OACbX,EAAAvC,GAASwC,OAAOC,QAAQ,wBAE1Bc,EAAUhC,UAAUC,OAAO,mB,CAE7B,SAASiC,IACPpD,EAAegD,UAAY,GAC3BhD,EAAekB,UAAUmC,IAAI,aAC7BvD,SAASwD,oBAAoB,UAAWC,GACxCvD,EAAesD,oBAAoB,QAASE,GAC5CP,EAAcK,oBAAoB,QAASH,E,CAE7C,SAASI,EAAQE,GACI,WAAfA,EAAMC,MACRN,G,CAGJ,SAASI,EAAiBC,GAEI,SAA1BA,EAAMlD,OAAOC,UACa,QAA1BiD,EAAMlD,OAAOC,UAEb4C,IAEEK,EAAMlD,SAAWkD,EAAME,eACzBP,IAEgC,YAA9BK,EAAMlD,OAAOI,QAAQ8B,OACvB,EAAAmB,EAAAhB,SAvFY,cAuFyBnC,EAAIiC,GAET,UAA9Be,EAAMlD,OAAOI,QAAQ8B,OACvB,EAAAmB,EAAAhB,SAzFU,YAyFyBnC,EAAIiC,E,CArC3C1C,EAAekB,UAAU2C,OAAO,aAChC7D,EAAeI,iBAAiB,QAASoD,GACzC1D,SAASM,iBAAiB,UAAWmD,GACrCN,EAAc7C,iBAAiB,QAAS+C,E,EAsC1C,MAAOW,GACP5B,EAAAvC,GAASwC,OAAOC,QAAQ0B,EAAMC,Q,KA1FlC,MAAMnD,EAAc,IAAI,EAAAoD,EAAApB","sources":["src/js/modal-open.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport FilmApi from './movieAPI';\nimport filmCard from '../templates/modal-film.hbs';\nimport fixObject from './fixObject';\nimport { setLocalStorage, getLocalStorage } from './localStorage';\nimport setFilmToLocalStorage from './setFilmToLocalStorage';\nconst ulEl = document.querySelector('.films');\nconst modalContainer = document.querySelector('#js-film-modal');\nconst LOCAL_WATCHED = 'watchedList';\nconst LOCAL_QUEUE = 'queueList';\nconst FAV_KEY = 'favouriteMovies';\nlet favObj = getLocalStorage(FAV_KEY);\nulEl.addEventListener('click', onFimlsListClick);\nconst filmAPIByID = new FilmApi();\nasync function onFimlsListClick(evt) {\n  try {\n    if (evt.target.nodeName === 'UL') {\n      return;\n    }\n    const item = evt.target.closest('li');\n    const id = item.dataset.id;\n    filmAPIByID.idFilm = id;\n    const film = await filmAPIByID.getFilmByID();\n    let genres = film.genres;\n    if (evt.target.nodeName === 'svg' || evt.target.nodeName === 'path') {\n      let favIcon = evt.target.closest('svg');\n      favIcon.classList.toggle('active');\n      let favId = Object.keys(favObj);\n      if (favIcon.classList.contains('active') && !favId.includes(id)) {\n        genres.forEach(genre => (favObj[id] = genre));\n        setLocalStorage(FAV_KEY, favObj);\n      }\n    } else {\n      const video = await filmAPIByID.getTrailerById();\n      let arr = video.results;\n      function findTrailer(arr) {\n        return arr\n          .map(el => {\n            return el;\n          })\n          .find(el => el.name.includes('Trailer') || el.name);\n      }\n      let objectWithTrailer = findTrailer(arr);\n      function trailerCheck(object) {\n        if (!object) {\n          Notiflix.Notify.failure('Oops! Trailer did not find...');\n        } else {\n          return `https://www.youtube.com/embed/${object.key}`;\n        }\n      }\n      const movieLink = trailerCheck(objectWithTrailer);\n      const fixedFilm = fixObject(film);\n      fixedFilm.movie = movieLink;\n\n      const filmMarkUp = filmCard(fixedFilm);\n\n      modalContainer.innerHTML = filmMarkUp;\n\n      let trailerBtnRef = document.querySelector('.trailerShow');\n      let iframeRef = document.querySelector('.hidden');\n\n      modalContainer.classList.remove('is-hidden');\n      modalContainer.addEventListener('click', onModalFilmClick);\n      document.addEventListener('keydown', onClose);\n      trailerBtnRef.addEventListener('click', toggleIframe);\n\n      function toggleIframe() {\n        if (!fixedFilm.movie) {\n          Notiflix.Notify.failure('Trailer did not find');\n        }\n        iframeRef.classList.toggle('trailer__youtube');\n      }\n      function closeModal() {\n        modalContainer.innerHTML = '';\n        modalContainer.classList.add('is-hidden');\n        document.removeEventListener('keydown', onClose);\n        modalContainer.removeEventListener('click', onModalFilmClick);\n        trailerBtnRef.removeEventListener('click', toggleIframe);\n      }\n      function onClose(event) {\n        if (event.code === 'Escape') {\n          closeModal();\n        }\n      }\n      function onModalFilmClick(event) {\n        if (\n          event.target.nodeName === 'path' ||\n          event.target.nodeName === 'svg'\n        ) {\n          closeModal();\n        }\n        if (event.target === event.currentTarget) {\n          closeModal();\n        }\n        if (event.target.dataset.name === 'watched') {\n          setFilmToLocalStorage(LOCAL_WATCHED, id, fixedFilm);\n        }\n        if (event.target.dataset.name === 'queue') {\n          setFilmToLocalStorage(LOCAL_QUEUE, id, fixedFilm);\n        }\n      }\n    }\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$ad3b8deda21ee6ba$var$ulEl","document","querySelector","$ad3b8deda21ee6ba$var$modalContainer","$ad3b8deda21ee6ba$var$favObj","$31u3U","getLocalStorage","addEventListener","async","evt","target","nodeName","id","closest","dataset","$ad3b8deda21ee6ba$var$filmAPIByID","idFilm","film","getFilmByID","genres","favIcon","classList","toggle","favId","Object","keys","contains","includes","forEach","genre","setLocalStorage","arr1","getTrailerById","results","movieLink","object","key","$parcel$interopDefault","Notify","failure","trailerCheck","map","el","find","name","fixedFilm","$6Jpgb","default","movie","filmMarkUp","$eXQeU","innerHTML","trailerBtnRef","iframeRef","toggleIframe","closeModal","add","removeEventListener","onClose","onModalFilmClick","event","code","currentTarget","$2ST4D","remove","error","message","$9Bkxl"],"version":3,"file":"index.a050c954.js.map"}